{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todoList","setSelectedTodoId","selectedTodoId","className","map","todo","id","classNames","completed","title","type","onClick","TodoFilter","filterBy","setFilterBy","inputFilter","setInputFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedUser","isModalLoaded","setSelectedUser","setIsModalLoaded","currentTodo","find","name","email","phone","href","rel","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","App","useState","setTodoList","isListLoaded","setIsListLoaded","All","fetchUserHandler","useCallback","a","user","fetchTodosHandler","todos","useEffect","filteredTodos","useMemo","resultArr","Active","filter","Completed","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"mRAUaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,SACAC,EAFuC,EAEvCA,kBACAC,EAHuC,EAGvCA,eAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAASI,KAAI,SAAAC,GAAI,OAChB,qBACE,UAAQ,OADV,UAIE,oBAAIF,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,iBACd,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWI,IACZ,CAAE,mBAAoBF,EAAKG,WAC3B,CAAE,mBAAoBH,EAAKG,YAF7B,SAKGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,WACPV,EAAkBI,EAAKC,KAL3B,SAQE,sBAAMH,UAAU,OAAhB,SACE,mBAAGA,UAAWI,IACZ,MACA,SACA,CAAE,eAAgBF,EAAKC,KAAOJ,cA1BjCG,EAAKC,aCtBPM,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEA,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAYK,EAAMC,OAAOH,QAHhD,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVkB,YAAY,YACZJ,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAWH,EAAeG,EAAMC,OAAOH,UAEnD,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBmB,MAAO,CAAEC,cAAe,OAAxD,SACGR,GACC,wBACE,UAAQ,oBACRL,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMK,EAAe,gBCjD/BQ,G,MAAmB,kBAC9B,qBAAKrB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCWNsB,EAA6B,SAAC,GAQpC,IAPLC,EAOI,EAPJA,aACAC,EAMI,EANJA,cACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,iBACA7B,EAGI,EAHJA,SACAE,EAEI,EAFJA,eACAD,EACI,EADJA,kBAEM6B,EAAc9B,EAAS+B,MAAK,SAAA1B,GAAI,OAAIA,EAAKC,KAAOJ,KAEtD,OACE,sBAAKC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbwB,EAGA,sBAAKxB,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYD,KAEZ,wBACEQ,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,WACPV,EAAkB,GAClB2B,EAAgB,CACdtB,GAAI,EACJ0B,KAAM,GACNC,MAAO,GACPC,MAAO,KAETL,GAAiB,SAKvB,sBAAK1B,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACG2B,GAAeA,EAAYrB,QAG9B,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACc,OAAX2B,QAAW,IAAXA,KAAatB,UACZ,wBAAQL,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAED,OACD,mBACEgC,KAAI,iBAAYT,EAAaO,OAC7Bb,OAAO,SACPgB,IAAI,aAHN,SAKGV,EAAaM,gBA5CtB,cAAC,EAAD,QCpBR,SAASK,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICLKC,G,SAAAA,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KAML,IAAMC,EAAgB,WAC3B,MAAgCC,mBAAiB,IAAjD,mBAAOlD,EAAP,KAAiBmD,EAAjB,KACA,EAAwCD,oBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAgCH,mBAAmBF,EAASM,KAA5D,mBAAOzC,EAAP,KAAiBC,EAAjB,KACA,EAAsCoC,mBAAS,IAA/C,mBAAOnC,EAAP,KAAoBC,EAApB,KACA,EAA4CkC,mBAAS,GAArD,mBAAOhD,EAAP,KAAuBD,EAAvB,KACA,EAAwCiD,mBAAe,CACrD5C,GAAI,EACJ0B,KAAM,GACNC,MAAO,GACPC,MAAO,KAJT,mBAAOR,EAAP,KAAqBE,EAArB,KAMA,EAA0CsB,oBAAS,GAAnD,mBAAOvB,EAAP,KAAsBE,EAAtB,KAEM0B,EAAmBC,sBAAW,sBAAC,4BAAAC,EAAA,yDACZ,IAAnBvD,EAD+B,gCDbImC,EAAG,iBCebnC,IAFM,OAE3BwD,EAF2B,OAIjC7B,GAAiB,GACjBD,EAAgB8B,GALiB,2CAOlC,CAACxD,IAEEyD,EAAoBH,sBAAW,sBAAC,4BAAAC,EAAA,sEDxBVpB,EAAY,UCwBF,OAC9BuB,EAD8B,OAGpCP,GAAgB,GAChBF,EAAYS,GAJwB,2CAKnC,IAEHC,qBAAU,WACRN,MACC,CAACrD,IAEJ2D,qBAAU,WACRF,MACC,IAEH,IAAMG,EAAwBC,mBAAQ,WACpC,IAAIC,EAAS,YAAOhE,GAEpB,OAAQa,GACN,KAAKmC,EAASM,IACZU,EAAYhE,EACZ,MAEF,KAAKgD,EAASiB,OACZD,EAAYhE,EAASkE,QAAO,SAAC7D,GAAD,OAAiBA,EAAKG,aAClD,MAEF,KAAKwC,EAASmB,UACZH,EAAYhE,EAASkE,QAAO,SAAC7D,GAAD,OAAgBA,EAAKG,aAarD,OANIO,IACFiD,EAAYA,EAAUE,QAAO,SAAC7D,GAC5B,OAAOA,EAAKI,MAAM2D,cAAcC,SAAStD,EAAYqD,mBAIlDJ,IACN,CAACjD,EAAaF,EAAUb,IAE3B,OACE,qCACE,qBAAKG,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,SAAUA,EACVC,YAAaA,EACbC,YAAaA,EACbC,eAAgBA,MAIpB,sBAAKb,UAAU,QAAf,WACIiD,GAAgB,cAAC,EAAD,IAEjBA,GACC,cAAC,EAAD,CACEpD,SAAUoD,GAAgBU,EAC1B7D,kBAAmBA,EACnBC,eAAgBA,cAQ3BA,EAAiB,GAChB,cAAC,EAAD,CACEwB,aAAcA,EACdC,cAAeA,EACfC,gBAAiBA,EACjBC,iBAAkBA,EAClB7B,SAAUA,EACVE,eAAgBA,EAChBD,kBAAmBA,QC7H7BqE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.60c295df.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Todos = {\n  todoList: Todo[],\n  setSelectedTodoId: (userId: number) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Todos> = ({\n  todoList,\n  setSelectedTodoId,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todoList.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              { 'has-text-danger': !todo.completed },\n              { 'has-text-success': todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodoId(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  'fa-eye',\n                  { 'fa-eye-slash': todo.id === selectedTodoId },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n// eslint-disable-next-line import/no-cycle\nimport { FilterBy } from '../../App';\n\ntype Props = {\n  filterBy: string,\n  setFilterBy: (param: FilterBy) => void,\n  inputFilter: string,\n  setInputFilter: (param: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  inputFilter,\n  setInputFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(event) => setFilterBy(event.target.value as FilterBy)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputFilter}\n          onChange={(event) => setInputFilter(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputFilter && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setInputFilter('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedUser: User,\n  isModalLoaded: boolean,\n  setSelectedUser: (param: User) => void,\n  setIsModalLoaded: (param: boolean) => void,\n  todoList: Todo[],\n  selectedTodoId: number,\n  setSelectedTodoId: (param: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedUser,\n  isModalLoaded,\n  setSelectedUser,\n  setIsModalLoaded,\n  todoList,\n  selectedTodoId,\n  setSelectedTodoId,\n}) => {\n  const currentTodo = todoList.find(todo => todo.id === selectedTodoId);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isModalLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodoId}`}\n            </div>\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodoId(0);\n                setSelectedUser({\n                  id: 0,\n                  name: '',\n                  email: '',\n                  phone: '',\n                });\n                setIsModalLoaded(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo && currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a\n                href={`mailto:${selectedUser.email}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable import/no-cycle */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\n\nimport { User } from './types/User';\n\nexport enum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [isListLoaded, setIsListLoaded] = useState(false);\n  const [filterBy, setFilterBy] = useState<FilterBy>(FilterBy.All);\n  const [inputFilter, setInputFilter] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [selectedUser, setSelectedUser] = useState<User>({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n  const [isModalLoaded, setIsModalLoaded] = useState(false);\n\n  const fetchUserHandler = useCallback(async () => {\n    if (selectedTodoId !== 0) {\n      const user = await getUser(selectedTodoId);\n\n      setIsModalLoaded(true);\n      setSelectedUser(user);\n    }\n  }, [selectedTodoId]);\n\n  const fetchTodosHandler = useCallback(async () => {\n    const todos = await getTodos();\n\n    setIsListLoaded(true);\n    setTodoList(todos);\n  }, []);\n\n  useEffect(() => {\n    fetchUserHandler();\n  }, [selectedTodoId]);\n\n  useEffect(() => {\n    fetchTodosHandler();\n  }, []);\n\n  const filteredTodos: Todo[] = useMemo(() => {\n    let resultArr = [...todoList];\n\n    switch (filterBy) {\n      case FilterBy.All:\n        resultArr = todoList;\n        break;\n\n      case FilterBy.Active:\n        resultArr = todoList.filter((todo: Todo) => !todo.completed);\n        break;\n\n      case FilterBy.Completed:\n        resultArr = todoList.filter((todo: Todo) => todo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    if (inputFilter) {\n      resultArr = resultArr.filter((todo) => {\n        return todo.title.toLowerCase().includes(inputFilter.toLowerCase());\n      });\n    }\n\n    return resultArr;\n  }, [inputFilter, filterBy, todoList]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                inputFilter={inputFilter}\n                setInputFilter={setInputFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isListLoaded && <Loader />}\n\n              {isListLoaded && (\n                <TodoList\n                  todoList={isListLoaded && filteredTodos}\n                  setSelectedTodoId={setSelectedTodoId}\n                  selectedTodoId={selectedTodoId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId > 0 && (\n        <TodoModal\n          selectedUser={selectedUser}\n          isModalLoaded={isModalLoaded}\n          setSelectedUser={setSelectedUser}\n          setIsModalLoaded={setIsModalLoaded}\n          todoList={todoList}\n          selectedTodoId={selectedTodoId}\n          setSelectedTodoId={setSelectedTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}